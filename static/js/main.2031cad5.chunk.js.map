{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","herf","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","aria-checked","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2031cad5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <a className=\"navbar-brand\" herf=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li> */}\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <div className=\"form-check form-switch mx-2\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                aria-checked=\"false\"\r\n                onClick={props.toggleMode}\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className={`form-check-label text-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Blue DarkMode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpclick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to Uppercase\", \"success\");\r\n  };\r\n\r\n  const handleLoclick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to Lowercase\", \"success\");\r\n  };\r\n\r\n  const handleclick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Cleared\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    var newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"All extra spaces are removed\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#16213E\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            id=\"myBox\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger mx-1 my-1\"\r\n          onClick={handleUpclick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger mx-1 my-1\"\r\n          onClick={handleLoclick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger mx-1 my-1\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger mx-1 my-1\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger mx-1 my-1\"\r\n          onClick={handleclick}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#0F3460\",\r\n        }}\r\n      >\r\n        <h3>Your text summary</h3>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} characters.\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          minutes read.\r\n        </p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  /* const capitalize = (word) => {\r\n    const lower = word.toLowercase();\r\n    return lower.charAt(0).toUppercase() + lower.slice(1);\r\n  };*/\r\n\r\n  return (\r\n    <div style={{ height: \"35px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n//import About from \"./Components/About\";\n//import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0F3460\";\n      showAlert(\"Blue Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* {<Router>} */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-4\">\n        {/* <Routes> */}\n        {/* <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"TextUtils - Word Counter and Character Counter\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            /> */}\n        <TextForm\n          heading=\"TextUtils - Word Counter and Character Counter\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n\n        {/* <Route exact path=\"/about\" element={<About mode={mode} />} /> */}\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}